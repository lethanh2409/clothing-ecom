import type { PrismaClient } from '@prisma/client';
import * as bcrypt from 'bcrypt';

// ---- DATASETS (b·∫°n th√™m ph·∫ßn t·ª≠ tu·ª≥ √Ω, field n√†o ch∆∞a c√≥ th√¨ ƒë·ªÉ null) ----
const rolesData = [
  { role_name: 'ADMIN', description: 'Qu·∫£n tr·ªã h·ªá th·ªëng' },
  { role_name: 'STAFF', description: 'Nh√¢n vi√™n v·∫≠n h√†nh' },
  { role_name: 'CUSTOMER', description: 'Kh√°ch h√†ng' },
];
const hashedPassword = bcrypt.hashSync('password123', 10);
const usersData = [
  // N·∫øu schema y√™u c·∫ßu password NOT NULL, ƒëi·ªÅn s·∫µn hash/chu·ªói t·∫°m; n·∫øu cho ph√©p NULL th√¨ ƒë·ªÉ null
  {
    username: 'admin',
    password: hashedPassword,
    email: 'admin@demo.vn',
    phone: '0900000001',
    full_name: 'Qu·∫£n Tr·ªã',
  },
  {
    username: 'staff1',
    password: hashedPassword,
    email: 'staff1@demo.vn',
    phone: '0900000002',
    full_name: 'Nh√¢n Vi√™n 1',
  },
  {
    username: 'khach1',
    password: hashedPassword,
    email: 'khach1@demo.vn',
    phone: '0900000003',
    full_name: 'Nguy·ªÖn VƒÉn A',
  },
  {
    username: 'khach2',
    password: hashedPassword,
    email: 'khach2@demo.vn',
    phone: '0900000004',
    full_name: 'Nguy·ªÖn VƒÉn B',
  },
];

const userRoleData = [
  { user_id: 1, role_id: 1 }, // admin ‚Üí ADMIN
  { user_id: 2, role_id: 2 }, // staff1 ‚Üí STAFF
  { user_id: 3, role_id: 3 }, // khach1 ‚Üí CUSTOMER
  { user_id: 4, role_id: 3 }, // khach2 ‚Üí CUSTOMER
];

const customersData = [
  { user_id: 3, birthday: new Date(1999, 8, 9), gender: 'male' },
  { user_id: 4, birthday: new Date(1998, 5, 15), gender: 'female' },
];

const addressesData = [
  {
    customer_id: 1,
    consignee_name: 'Nguy·ªÖn VƒÉn A',
    consignee_phone: '0900000003',
    province: 'Th√†nh ph·ªë H√† N·ªôi',
    district: 'Qu·∫≠n Ba ƒê√¨nh',
    ward: 'Ph∆∞·ªùng Ph√∫c X√°',
    street: 'Ph·ªë Nguy·ªÖn Tri Ph∆∞∆°ng',
    house_num: '10',
    is_default: true,
  },
  {
    customer_id: 1,
    consignee_name: 'L√™ Th·ªã C',
    consignee_phone: '0900000005',
    province: 'Th√†nh ph·ªë H√† N·ªôi',
    district: 'Qu·∫≠n Ba ƒê√¨nh',
    ward: 'Ph∆∞·ªùng Ph√∫c X√°',
    street: 'Ph·ªë Nguy·ªÖn Tri Ph∆∞∆°ng',
    house_num: '10',
    is_default: false,
  },
  {
    customer_id: 2,
    consignee_name: 'Nguy·ªÖn VƒÉn B',
    consignee_phone: '0900000004',
    province: 'Th√†nh ph·ªë H√† N·ªôi',
    district: 'Qu·∫≠n Ho√†n Ki·∫øm',
    ward: 'Ph∆∞·ªùng H√†ng B√†i',
    street: 'Ph·ªë Tr√†ng Ti·ªÅn',
    house_num: '20',
    is_default: true,
  },
  {
    customer_id: 2,
    consignee_name: 'Tr·∫ßn Th·ªã D',
    consignee_phone: '0900000006',
    province: 'Th√†nh ph·ªë H√† N·ªôi',
    district: 'Qu·∫≠n Ho√†n Ki·∫øm',
    ward: 'Ph∆∞·ªùng H√†ng B√†i',
    street: 'Ph·ªë H√†ng B√†i',
    house_num: '15',
    is_default: false,
  },
];

// ---- SEED (kh√¥ng prisma.find; ch·ªâ createMany) ----
export async function seedUsers(prisma: PrismaClient) {
  console.log('üë§ Seeding roles/users/user_role/customers/addresses (data only)‚Ä¶');

  await prisma.roles.createMany({ data: rolesData, skipDuplicates: true });
  await prisma.users.createMany({ data: usersData, skipDuplicates: true });
  await prisma.user_role.createMany({ data: userRoleData, skipDuplicates: true });
  await prisma.customers.createMany({ data: customersData, skipDuplicates: true });
  await prisma.addresses.createMany({ data: addressesData, skipDuplicates: true });
}
